[package]
name = "lumina-node-wasm"
version = "0.10.3"
edition = "2021"
license = "Apache-2.0"
description = "Browser compatibility layer for the Lumina node"
authors = ["Eiger <hello@eiger.co>"]
homepage = "https://www.eiger.co"
repository = "https://github.com/eigerco/lumina"
readme = "README.md"
rust-version = "1.87"
# crates.io is limited to 5 keywords and 5 categories
keywords = ["blockchain", "celestia", "lumina", "node", "browser"]
# Must be one of <https://crates.io/category_slugs>
categories = [
  "asynchronous",
  "cryptography::cryptocurrencies",
  "network-programming",
  "wasm",
  "web-programming",
]

[lib]
crate-type = ["cdylib", "lib"]

[target.'cfg(target_arch = "wasm32")'.dependencies]
blockstore.workspace = true
celestia-grpc = { workspace = true, features = ["wasm-bindgen"] }
celestia-types = { workspace = true, features = ["wasm-bindgen"] }
libp2p = { workspace = true, features = ["serde"] }
lumina-node = { workspace = true, features = ["wasm-bindgen"] }
lumina-utils = { workspace = true, features = ["executor"] }
tendermint.workspace = true

anyhow.workspace = true
console_error_panic_hook = "0.1.7"
enum-as-inner = "0.6"
futures.workspace = true
gloo-timers.workspace = true
idb = "0.6"
instant = "0.1"
js-sys.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde-wasm-bindgen.workspace = true
serde_repr.workspace = true
send_wrapper.workspace = true
thiserror.workspace = true
time = { workspace = true, features = ["wasm-bindgen"] }
tokio = { workspace = true, features = ["sync"] }
tokio-stream = { version = "0.1.16", features = ["sync"] }
tokio-util.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, features = ["time"] }
tracing-web = "0.1"
wasm-bindgen.workspace = true
wasm-bindgen-futures.workspace = true
web-sys = { workspace = true, features = [
  "BroadcastChannel",
  "DedicatedWorkerGlobalScope",
  "MessageChannel",
  "MessageEvent",
  "MessagePort",
  "Navigator",
  "ServiceWorker",
  "ServiceWorkerGlobalScope",
  "SharedWorker",
  "SharedWorkerGlobalScope",
  "StorageManager",
  "Window",
  "Worker",
  "WorkerGlobalScope",
  "WorkerNavigator",
  "WorkerOptions",
  "WorkerType",
] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
celestia-rpc = { workspace = true, features = ["wasm-bindgen", "p2p"] }
rexie.workspace = true
wasm-bindgen-test.workspace = true

[package.metadata.docs.rs]
targets = ["wasm32-unknown-unknown"]

# Uncomment this if you need debug symbols in release.
# Also check workspace's `Cargo.toml`.
#[package.metadata.wasm-pack.profile.release]
#wasm-opt = ['-O4', '-g']

[package]
name = "celestia-types"
version = "0.15.0"
edition = "2021"
license = "Apache-2.0"
description = "Core types, traits and constants for working with the Celestia ecosystem"
authors = ["Eiger <hello@eiger.co>"]
homepage = "https://www.eiger.co"
repository = "https://github.com/eigerco/lumina"
readme = "README.md"
rust-version = "1.85"
# crates.io is limited to 5 keywords and 5 categories
keywords = ["blockchain", "celestia", "lumina"]
# Must be one of <https://crates.io/category_slugs>
categories = ["encoding", "cryptography::cryptocurrencies"]

[dependencies]
blockstore.workspace = true
celestia-proto.workspace = true
nmt-rs = { workspace = true, features = ["serde"] }
prost.workspace = true
tendermint = { workspace = true, features = ["std", "rust-crypto", "secp256k1"] }
tendermint-proto.workspace = true

base64.workspace = true
bech32 = "0.11"
bitvec = "1"
bytes.workspace = true
cid = { workspace = true, features = ["std"] }
const_format = "0.2.32"
ed25519-consensus = { version = "2", optional = true }
enum_dispatch = "0.3.13"
leopard-codec.workspace = true
libp2p-identity = { workspace = true, optional = true }
multiaddr = { version = "0.18.1", optional = true }
multihash = "0.19.1"
rand = { workspace = true, optional = true }
rust_decimal = { version = "1.35", default-features = false, features = ["serde"] }
serde = { workspace = true, features = ["derive"] }
serde_repr.workspace = true
sha2 = "0.10.8"
thiserror.workspace = true
time.workspace = true
uniffi = { workspace = true, optional = true }
k256.workspace = true

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom_02.workspace = true
lumina-utils = { workspace = true, features = ["make-object"] }

js-sys = { workspace = true, optional = true }
serde-wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }

[dev-dependencies]
ed25519-consensus = "2"
rand.workspace = true
serde_json.workspace = true
postcard = { version = "1", features = ["alloc"] }

# doc-tests
indoc = "2"

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test.workspace = true

[features]
default = ["p2p"]
p2p = ["dep:libp2p-identity", "dep:multiaddr"]
test-utils = ["dep:ed25519-consensus", "dep:rand"]
tonic = ["celestia-proto/tonic"]
wasm-bindgen = ["dep:js-sys", "dep:serde-wasm-bindgen", "dep:wasm-bindgen", "nmt-rs/serde", "time/wasm-bindgen", "celestia-proto/wasm-bindgen"]
uniffi = ["dep:uniffi", "celestia-proto/uniffi"]

[package.metadata.docs.rs]
features = ["p2p", "test-utils"]
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.cargo-udeps.ignore]
development = ["indoc"]

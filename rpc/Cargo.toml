[package]
name = "celestia-rpc"
version = "0.14.0"
edition.workspace = true
license = "Apache-2.0"
description = "A collection of traits for interacting with Celestia data availability nodes RPC"
authors = ["Eiger <hello@eiger.co>"]
homepage = "https://www.eiger.co"
repository = "https://github.com/eigerco/lumina"
readme = "README.md"
rust-version = "1.87"
# crates.io is limited to 5 keywords and 5 categories
keywords = ["blockchain", "celestia", "lumina"]
# Must be one of <https://crates.io/category_slugs>
categories = [
  "api-bindings",
  "asynchronous",
  "encoding",
  "cryptography::cryptocurrencies",
]

[dependencies]
celestia-proto.workspace = true
celestia-types.workspace = true

async-stream.workspace = true
base64.workspace = true
futures.workspace = true
jsonrpsee = { workspace = true, features = ["client-core", "macros"] }
serde = { workspace = true, features = ["derive"] }
serde_repr.workspace = true
thiserror.workspace = true
tracing.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
http.workspace = true
jsonrpsee = { workspace = true, features = ["http-client", "ws-client"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
# todo, all features are default, maybe we don't care
gloo-net = { version = "0.6", features = ["http", "json"] }
rust-embed = { workspace = true, features = ["debug-embed", "include-exclude", "interpolate-folder-path"] }
send_wrapper.workspace = true
serde_json.workspace = true

[dev-dependencies]
anyhow.workspace = true
lumina-utils = { workspace = true, features = ["test-utils", "time"] }
nmt-rs.workspace = true
rand.workspace = true
tokio = { workspace = true, features = ["sync"] }
tracing.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
dotenvy.workspace = true
libp2p = { workspace = true, features = [
  "tokio",
  "macros",
  "tcp",
  "noise",
  "yamux",
] }
tokio = { workspace = true, features = ["rt", "macros"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
getrandom_02.workspace = true
wasm-bindgen-test.workspace = true

[features]
default = ["p2p"]
p2p = ["celestia-types/p2p"]
wasm-bindgen = ["celestia-types/wasm-bindgen", "jsonrpsee/wasm-client"]

[package.metadata.docs.rs]
features = ["p2p"]
rustdoc-args = ["--cfg", "docsrs"]

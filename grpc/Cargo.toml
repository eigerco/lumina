[package]
name = "celestia-grpc"
version = "0.7.0"
edition = "2021"
license = "Apache-2.0"
description = "A client for interacting with Celestia validator nodes gRPC"
authors = ["Eiger <hello@eiger.co>"]
homepage = "https://www.eiger.co"
repository = "https://github.com/eigerco/lumina"
readme = "README.md"
rust-version = "1.85"
# crates.io is limited to 5 keywords and 5 categories
keywords = ["blockchain", "celestia", "lumina"]
# Must be one of <https://crates.io/category_slugs>
categories = [
  "api-bindings",
  "asynchronous",
  "encoding",
  "cryptography::cryptocurrencies",
]

[lib]
crate-type = ["cdylib", "lib"]

[dependencies]
celestia-grpc-macros.workspace = true
celestia-proto = { workspace = true, features = ["tonic"] }
celestia-types.workspace = true
lumina-utils = { workspace = true, features = ["time"] }

async-trait = { workspace = true, optional = true }
bytes.workspace = true
hex.workspace = true
http-body = "1"
ics23 = { version = "0.12", default-features = false, features = ["std"] }
k256.workspace = true
prost.workspace = true
serde.workspace = true
serde_json = { workspace = true, optional = true }
tendermint.workspace = true
tendermint-proto.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["sync"] }
tonic = { workspace = true, features = ["codegen", "prost"] }
uniffi = { workspace = true, optional = true, features = ["tokio"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["time"] }
tonic = { workspace = true, features = ["transport"] }
signature = "2"

[target.'cfg(target_arch = "wasm32")'.dependencies]
futures.workspace = true
getrandom_02.workspace = true
gloo-timers.workspace = true
js-sys = { workspace = true, optional = true }
send_wrapper.workspace = true
tonic-web-wasm-client.workspace = true
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }

[dev-dependencies]
celestia-rpc.workspace = true
futures.workspace = true
lumina-utils = { workspace = true, features = ["test-utils"] }
rand.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
tokio = { workspace = true, features = ["rt", "macros"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
celestia-rpc = { workspace = true, features = ["wasm-bindgen"] }
wasm-bindgen-futures.workspace = true
wasm-bindgen-test.workspace = true

[features]
default = []
wasm-bindgen = ["celestia-types/wasm-bindgen", "dep:js-sys", "dep:wasm-bindgen", "dep:wasm-bindgen-futures"]
uniffi = ["dep:uniffi", "dep:async-trait", "dep:serde_json", "celestia-types/uniffi"]

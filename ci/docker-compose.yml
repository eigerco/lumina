services:
  validator:
    image: validator
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.validator
    environment:
      # provide amount of bridge nodes to provision (default: 2)
      - BRIDGE_COUNT=2
    ports:
      - 19090:9090
    volumes:
      - credentials:/credentials
      - genesis:/genesis

  grpcwebproxy:
    image: grpcwebproxy
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.grpcwebproxy
    command: --backend_addr=validator:9090 --run_tls_server=false --allow_all_origins
    ports:
      - 18080:8080

  bridge-0:
    image: bridge
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.bridge
    environment:
      # provide an id for the bridge node (default: 0)
      # each node should have a next natural number starting from 0
      - NODE_ID=0
      # setting SKIP_AUTH to true disables the use of JWT for authentication
      - SKIP_AUTH=true
      - CELESTIA_ENABLE_QUIC=1
    ports:
      - 26658:26658
    volumes:
      - credentials:/credentials
      - genesis:/genesis

  bridge-1:
    image: bridge
    platform: "linux/amd64"
    build:
      context: .
      dockerfile: Dockerfile.bridge
    environment:
      # provide an id for the bridge node (default: 0)
      # each node should have a next natural number starting from 0
      - NODE_ID=1
      - CELESTIA_ENABLE_QUIC=1
    ports:
      - 36658:26658
    volumes:
      - credentials:/credentials
      - genesis:/genesis

  # Uncomment for another bridge node
  # remember to adjust services.validator.command
  # bridge-1:
  #   image: bridge
  #   platform: "linux/amd64"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.bridge
  #   environment:
  #     # provide an id for the bridge node (default: 0)
  #     # each node should have a next natural number starting from 0
  #     - NODE_ID=2
  #     - CELESTIA_ENABLE_QUIC=1
  #   ports:
  #     - 46658:26658
  #   volumes:
  #     - credentials:/credentials
  #     - genesis:/genesis

volumes:
  # local volume where node's credentials can persist
  credentials:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './credentials'
  # a temporary fs where the genesis hash is announced
  genesis:
    driver_opts:
      type: tmpfs
      device: tmpfs
